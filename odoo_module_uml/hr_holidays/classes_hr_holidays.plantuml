@startuml classes_hr_holidays
set namespaceSeparator none
class "AccrualPlan" as odoo_src.odoo.addons.hr_holidays.models.hr_leave_accrual_plan.AccrualPlan {
  accrued_gain_time
  active
  added_value_type
  allocation_ids
  carryover_date
  carryover_day
  carryover_day_display
  carryover_month
  company_id
  employees_count
  is_based_on_worked_time
  level_count
  level_ids
  name
  show_transition_mode
  time_off_type_id
  transition_mode
  action_open_accrual_plan_employees()
  copy_data(default)
}
class "AccrualPlanLevel" as odoo_src.odoo.addons.hr_holidays.models.hr_leave_accrual_plan_level.AccrualPlanLevel {
  accrual_plan_id
  accrual_validity
  accrual_validity_count
  accrual_validity_type
  accrued_gain_time
  action_with_unused_accruals
  added_value
  added_value_type
  can_modify_value_type
  cap_accrued_time
  cap_accrued_time_yearly
  first_day
  first_day_display
  first_month
  first_month_day
  first_month_day_display
  frequency
  maximum_leave
  maximum_leave_yearly
  postpone_max_days
  second_day
  second_day_display
  second_month
  second_month_day
  second_month_day_display
  sequence
  start_count
  start_type
  week_day
  yearly_day
  yearly_day_display
  yearly_month
}
class "CalendarEvent" as odoo_src.odoo.addons.hr_holidays.models.calendar_event.CalendarEvent {
}
class "CalendarLeaves" as odoo_src.odoo.addons.hr_holidays.models.resource.CalendarLeaves {
  holiday_id
  create(vals_list)
  unlink()
  write(vals)
}
class "Department" as odoo_src.odoo.addons.hr_holidays.models.hr_department.Department {
  absence_of_today
  allocation_to_approve_count
  leave_to_approve_count
  action_open_allocation_department()
  action_open_leave_department()
}
class "HolidaysAllocation" as odoo_src.odoo.addons.hr_holidays.models.hr_leave_allocation.HolidaysAllocation {
  accrual_plan_id
  active_employee
  actual_lastcall
  allocation_type
  already_accrued
  approver_id
  can_approve
  carried_over_days_expiration_date
  date_from
  date_to
  department_id
  duration_display
  employee_company_id
  employee_id
  expiring_carryover_days
  holiday_status_id
  is_name_custom
  is_officer
  last_executed_carryover_date
  lastcall
  leaves_taken
  manager_id
  max_leaves
  name
  name_validity
  nextcall
  notes
  number_of_days
  number_of_days_display
  number_of_hours_display
  second_approver_id
  state
  type_request_unit
  validation_type
  yearly_accrued_amount
  action_approve()
  action_refuse()
  action_set_to_confirm()
  action_validate()
  activity_update()
  add_follower(employee_id)
  copy(default)
  create(vals_list)
  message_subscribe(partner_ids, subtype_ids)
  onchange(values, field_names, fields_spec)
  write(values)
}
class "HolidaysRequest" as odoo_src.odoo.addons.hr_holidays.models.hr_leave.HolidaysRequest {
  active_employee
  attachment_ids
  can_approve
  can_cancel
  can_reset
  color
  company_id
  date_from
  date_to
  department_id
  duration_display
  employee_company_id
  employee_id
  first_approver_id
  has_mandatory_day
  holiday_status_id
  is_hatched
  is_striked
  last_several_days
  leave_type_increases_duration
  leave_type_request_unit
  leave_type_support_document
  manager_id
  meeting_id
  name
  notes
  number_of_days
  number_of_hours
  private_name
  request_date_from
  request_date_from_period
  request_date_to
  request_hour_from
  request_hour_to
  request_unit_half
  request_unit_hours
  resource_calendar_id
  second_approver_id
  state
  supported_attachment_ids
  supported_attachment_ids_count
  tz
  tz_mismatch
  user_id
  validation_type
  action_approve(check_state)
  action_cancel()
  action_documents()
  action_open_records(leave_ids)
  action_refuse()
  action_reset_confirm()
  action_validate(check_state)
  activity_update()
  add_follower(employee_id)
  copy_data(default)
  create(vals_list)
  default_get(fields_list)
  get_unusual_days(date_from, date_to)
  message_subscribe(partner_ids, subtype_ids)
  onchange(values, field_names, fields_spec)
  open_pending_requests()
  unlink()
  write(values)
}
class "HolidaysSummaryEmployee" as odoo_src.odoo.addons.hr_holidays.wizard.hr_holidays_summary_employees.HolidaysSummaryEmployee {
  date_from
  emp
  holiday_type
  print_report()
}
class "HolidaysType" as odoo_src.odoo.addons.hr_holidays.models.hr_leave_type.HolidaysType {
  accrual_count
  accruals_ids
  active
  allocation_count
  allocation_notif_subtype_id
  allocation_validation_type
  allows_negative
  color
  company_id
  country_code
  country_id
  create_calendar_meeting
  employee_requests
  group_days_leave
  has_valid_allocation
  icon_id
  include_public_holidays_in_duration
  leave_notif_subtype_id
  leave_validation_type
  leaves_taken
  max_allowed_negative
  max_leaves
  name
  request_unit
  requires_allocation
  responsible_ids
  sequence
  show_on_dashboard
  support_document
  time_type
  unpaid
  virtual_remaining_leaves
  action_see_accrual_plans()
  action_see_days_allocated()
  action_see_group_leaves()
  check_allocation_requirement_edit_validity()
  copy_data(default)
  get_allocation_data(employees, target_date)
  get_allocation_data_request(target_date, hidden_allocations)
  has_accrual_allocation()
  requested_display_name()
}
class "HrDepartureWizard" as odoo_src.odoo.addons.hr_holidays.wizard.hr_departure_wizard.HrDepartureWizard {
  action_register_departure()
}
class "HrEmployee" as odoo_src.odoo.addons.hr_holidays.models.hr_employee.HrEmployee {
  current_leave_id
  action_time_off_dashboard()
  get_allocation_requests_amount()
  get_mandatory_days(start_date, end_date)
  get_mandatory_days_data(date_start, date_end)
  get_public_holidays_data(date_start, date_end)
  get_special_days_data(date_start, date_end)
}
class "HrEmployeeBase" as odoo_src.odoo.addons.hr_holidays.models.hr_employee_base.HrEmployeeBase {
  allocation_count
  allocation_display
  allocation_remaining_display
  allocations_count
  current_leave_state
  hr_icon_display
  is_absent
  leave_date_from
  leave_date_to
  leave_manager_id
  leaves_count
  remaining_leaves
  show_leaves
  create(vals_list)
  write(values)
}
class "HrHolidaySummaryReport" as odoo_src.odoo.addons.hr_holidays.report.holidays_summary_report.HrHolidaySummaryReport {
}
class "HrHolidaysCancelLeave" as odoo_src.odoo.addons.hr_holidays.wizard.hr_holidays_cancel_leave.HrHolidaysCancelLeave {
  leave_id
  reason
  action_cancel_leave()
}
class "HrHolidaysController" as odoo_src.odoo.addons.hr_holidays.controllers.main.HrHolidaysController {
  hr_holidays_allocation_refuse(res_id, token)
  hr_holidays_allocation_validate(res_id, token)
  hr_holidays_request_approve(res_id, token)
  hr_holidays_request_refuse(res_id, token)
  hr_holidays_request_validate(res_id, token)
}
class "HrLeaveAllocationGenerateMultiWizard" as odoo_src.odoo.addons.hr_holidays.wizard.hr_leave_allocation_generate_multi_wizard.HrLeaveAllocationGenerateMultiWizard {
  accrual_plan_id
  allocation_mode
  allocation_type
  category_id
  company_id
  date_from
  date_to
  department_id
  duration
  employee_ids
  holiday_status_id
  name
  notes
  request_unit
  action_generate_allocations()
}
class "HrLeaveGenerateMultiWizard" as odoo_src.odoo.addons.hr_holidays.wizard.hr_leave_generate_multi_wizard.HrLeaveGenerateMultiWizard {
  allocation_mode
  category_id
  company_id
  date_from
  date_to
  department_id
  employee_ids
  holiday_status_id
  name
  action_generate_time_off()
}
class "LeaveReport" as odoo_src.odoo.addons.hr_holidays.report.hr_leave_report.LeaveReport {
  allocation_id
  company_id
  date_from
  date_to
  department_id
  holiday_status_id
  leave_id
  leave_type
  name
  number_of_days
  number_of_hours
  state
  action_open_record()
  init()
}
class "LeaveReport" as odoo_src.odoo.addons.hr_holidays.report.hr_leave_employee_type_report.LeaveReport {
  active_employee
  company_id
  date_from
  date_to
  department_id
  employee_id
  holiday_status
  leave_type
  number_of_days
  number_of_hours
  state
  action_time_off_analysis()
  init()
}
class "LeaveReportCalendar" as odoo_src.odoo.addons.hr_holidays.report.hr_leave_report_calendar.LeaveReportCalendar {
  company_id
  department_id
  description
  duration
  employee_id
  holiday_status_id
  is_absent
  is_hatched
  is_manager
  is_striked
  job_id
  leave_id
  leave_manager_id
  name
  start_datetime
  state
  stop_datetime
  tz
  action_approve()
  action_refuse()
  action_validate()
  get_unusual_days(date_from, date_to)
  init()
}
class "MailActivityType" as odoo_src.odoo.addons.hr_holidays.models.mail_activity_type.MailActivityType {
}
class "MailMessageSubtype" as odoo_src.odoo.addons.hr_holidays.models.mail_message_subtype.MailMessageSubtype {
  create(vals_list)
  write(vals)
}
class "MandatoryDay" as odoo_src.odoo.addons.hr_holidays.models.hr_leave_mandatory_day.MandatoryDay {
  color
  company_id
  department_ids
  end_date
  name
  resource_calendar_id
  start_date
}
class "ResPartner" as odoo_src.odoo.addons.hr_holidays.models.res_partner.ResPartner {
}
class "ResourceCalendar" as odoo_src.odoo.addons.hr_holidays.models.resource.ResourceCalendar {
  associated_leaves_count
}
class "TestAccessRightsCreate" as odoo_src.odoo.addons.hr_holidays.tests.test_access_rights.TestAccessRightsCreate {
  test_base_user_create_other()
  test_base_user_create_self()
  test_holidays_manager_create_other()
  test_holidays_manager_create_self()
  test_holidays_user_create_other()
  test_holidays_user_create_self()
}
class "TestAccessRightsEmployeeManager" as odoo_src.odoo.addons.hr_holidays.tests.test_allocation_access_rights.TestAccessRightsEmployeeManager {
  setUpClass()
  test_manager_approve_own()
  test_manager_approve_request_allocation()
  test_manager_refuse_request_allocation()
  test_manager_request_allocation_other()
}
class "TestAccessRightsHolidayManager" as odoo_src.odoo.addons.hr_holidays.tests.test_allocation_access_rights.TestAccessRightsHolidayManager {
  test_holiday_manager_can_approve_own()
  test_holiday_manager_refuse_validated()
}
class "TestAccessRightsHolidayUser" as odoo_src.odoo.addons.hr_holidays.tests.test_allocation_access_rights.TestAccessRightsHolidayUser {
  test_holiday_user_cannot_approve_own()
  test_holiday_user_request_allocation()
}
class "TestAccessRightsRead" as odoo_src.odoo.addons.hr_holidays.tests.test_access_rights.TestAccessRightsRead {
  test_leave_read_by_user_other()
  test_leave_read_by_user_other_browse()
  test_leave_read_by_user_own()
}
class "TestAccessRightsSimpleUser" as odoo_src.odoo.addons.hr_holidays.tests.test_allocation_access_rights.TestAccessRightsSimpleUser {
  test_simple_user_request_allocation()
  test_simple_user_request_allocation_no_validation()
  test_simple_user_request_allocation_no_validation_other()
  test_simple_user_reset_to_draft()
}
class "TestAccessRightsUnlink" as odoo_src.odoo.addons.hr_holidays.tests.test_access_rights.TestAccessRightsUnlink {
  test_leave_unlink_confirm_by_user()
  test_leave_unlink_confirm_in_past_by_user()
  test_leave_unlink_validate_by_user()
}
class "TestAccessRightsWrite" as odoo_src.odoo.addons.hr_holidays.tests.test_access_rights.TestAccessRightsWrite {
  test_leave_creation_for_other_user()
  test_leave_double_validate()
  test_leave_double_validate_holiday_manager()
  test_leave_hr_to_validate_by_holiday_user()
  test_leave_hr_to_validate_by_manager()
  test_leave_hr_to_validate_by_user()
  test_leave_manager_to_validate_by_holiday_user()
  test_leave_manager_to_validate_by_user()
  test_leave_messaging_by_user()
  test_leave_update_by_user()
  test_leave_update_by_user_other()
}
class "TestAccrualAllocations" as odoo_src.odoo.addons.hr_holidays.tests.test_accrual_allocations.TestAccrualAllocations {
  assert_allocation_and_balance(allocation, expected_allocation_value, expected_balance_value, msg)
  setAllocationCreateDate(allocation_id, date)
  setUpClass()
  test_accrual_allocation_data_persists()
  test_accrual_allocation_data_with_different_units()
  test_accrual_allocation_data_with_different_units_and_used_days()
  test_accrual_allocation_data_with_different_units_half_day()
  test_accrual_allocation_date_in_the_future()
  test_accrual_allocation_with_virtual_future_leaves()
  test_accrual_allocation_without_working_hours()
  test_accrual_carrover_other_period_end_multi_level()
  test_accrual_carryover_at_allocation()
  test_accrual_carryover_at_other()
  test_accrual_creation_for_history()
  test_accrual_creation_on_anterior_date()
  test_accrual_days_left_under_carryover_maximum()
  test_accrual_hours_with_max_carryover()
  test_accrual_immediate_cron_run()
  test_accrual_leaves_cancel_cron()
  test_accrual_leaves_taken_maximum()
  test_accrual_leaves_taken_maximum_hours()
  test_accrual_lost_first_january()
  test_accrual_lost_previous_days()
  test_accrual_maximum_leaves()
  test_accrual_maximum_leaves_no_limit()
  test_accrual_period_start()
  test_accrual_period_start_level_transfer()
  test_accrual_period_start_multiple_runs()
  test_accrual_period_start_past_start_date()
  test_accrual_plan_with_multiple_levels()
  test_accrual_plan_with_multiple_levels_2()
  test_accrual_skipped_period()
  test_accrual_transition_after_period()
  test_accrual_transition_immediately()
  test_accrual_unlink()
  test_accrual_unused_accrual_reset_to_lost()
  test_accrual_with_report_creation_for_history()
  test_added_type_during_onchange()
  test_cache_invalidation_with_future_leaves()
  test_cancel_invalid_leaves_with_regular_and_accrual_allocations()
  test_carried_over_days_expiry()
  test_carried_over_days_expiry_date_computation()
  test_carried_over_days_expiry_date_computation_2()
  test_carried_over_days_expiry_date_computation_3()
  test_carried_over_days_expiry_date_computation_4()
  test_carried_over_days_expiry_date_computation_5()
  test_carriedover_days_expiration_reset()
  test_check_gain()
  test_check_lastcall_change_regular_to_accrual()
  test_check_max_value()
  test_check_max_value_hours()
  test_compute_allocation_days_after_adding_employee()
  test_consistency_between_cap_accrued_time_and_maximum_leave()
  test_frequency_bimonthly()
  test_frequency_biyearly()
  test_frequency_daily()
  test_frequency_hourly_calendar()
  test_frequency_hourly_worked_hours()
  test_frequency_monthly()
  test_frequency_weekly()
  test_frequency_yearly()
  test_future_accural_time()
  test_future_accural_time_with_leaves_taken_in_the_past()
  test_matching_accrual_and_carryover_dates()
  test_matching_carryover_and_level_transition_dates()
  test_no_days_accrued_on_carryover_date()
  test_set_accrual_allocation_to_zero_from_ui()
  test_start_accrual_gain_time_immediately()
  test_three_levels_accrual()
  test_time_off_balance_computation()
  test_time_off_using_expiring_carried_over_days()
  test_unused_accrual_lost()
  test_unused_accrual_postponed()
  test_unused_accrual_postponed_2()
  test_unused_accrual_postponed_limit()
  test_unused_accrual_postponed_limit_2()
  test_validate_leaves_with_more_days_than_allocation()
  test_yearly_cap()
  test_yearly_cap_constraint()
}
class "TestAccrualAllocations" as odoo_src.odoo.addons.hr_holidays.tests.test_past_accruals.TestAccrualAllocations {
  setUpClass()
}
class "TestAcessRightsStates" as odoo_src.odoo.addons.hr_holidays.tests.test_access_rights.TestAcessRightsStates {
  test_base_user_reset_current_leave()
  test_base_user_reset_other_employee_leave()
  test_base_user_reset_other_employee_leave_and_is_leave_manager_id()
  test_base_user_reset_refused_leave()
  test_holiday_manager_reset_current_leave()
  test_holiday_manager_reset_his_leave()
  test_holiday_manager_reset_other_employee_leave()
  test_holiday_manager_reset_other_employee_leave_and_is_leave_manager_id()
  test_holiday_manager_reset_refused_leave()
  test_holiday_manager_reset_self_and_is_manager_id()
  test_holiday_user_reset_current_leave()
  test_holiday_user_reset_his_leave()
  test_holiday_user_reset_other_employee_leave()
  test_holiday_user_reset_other_employee_leave_and_is_leave_manager_id()
  test_holiday_user_reset_refused_leave()
  test_holiday_user_reset_self_and_is_manager_id()
  test_reset_confirm_status()
}
class "TestAllocationRights" as odoo_src.odoo.addons.hr_holidays.tests.test_allocation_access_rights.TestAllocationRights {
  request_allocation(user, values)
  setUpClass()
}
class "TestAllocations" as odoo_src.odoo.addons.hr_holidays.tests.test_allocations.TestAllocations {
  change_allocation_type_day()
  change_allocation_type_hours()
  setUpClass()
  test_allocation_category()
  test_allocation_department()
  test_allocation_dropdown_after_period()
  test_allocation_hourly_leave_type()
  test_allocation_multi_employee()
  test_allocation_request_day()
  test_allocation_request_half_days()
  test_allocation_type_hours_with_resource_calendar()
  test_allocation_whole_company()
  test_allowed_change_allocation()
  test_automatic_allocation_type()
  test_create_allocation_from_company_with_no_employee_for_current_user()
  test_disallowed_change_allocation_with_overlapping_allocations()
  test_employee_holidays_archived_display()
  test_leave_allocation_and_leave_request()
  test_leave_allocation_by_removing_employee()
}
class "TestAutomaticLeaveDates" as odoo_src.odoo.addons.hr_holidays.tests.test_automatic_leave_dates.TestAutomaticLeaveDates {
  setUpClass()
  test_2weeks_calendar()
  test_2weeks_calendar_next_week()
  test_attendance_next_day()
  test_attendance_on_morning()
  test_attendance_previous_day()
  test_multiple_attendance_on_morning()
  test_no_attendances()
  test_single_attendance_on_morning_and_afternoon()
}
class "TestChangeDepartment" as odoo_src.odoo.addons.hr_holidays.tests.test_change_department.TestChangeDepartment {
  HolidaysEmployeeGroup
  holidays_status_1
  test_employee_change_department_request_change_department()
}
class "TestCompanyLeave" as odoo_src.odoo.addons.hr_holidays.tests.test_company_leave.TestCompanyLeave {
  setUpClass()
  test_01_leave_whole_company()
  test_02_leave_whole_company()
  test_03_leave_whole_company()
  test_04_leave_whole_company()
  test_06_leave_whole_company()
  test_07_leave_whole_company()
}
class "TestDashboard" as odoo_src.odoo.addons.hr_holidays.tests.test_dashboard.TestDashboard {
  test_dashboard_special_days()
}
class "TestExpiringLeaves" as odoo_src.odoo.addons.hr_holidays.tests.test_expiring_leaves.TestExpiringLeaves {
  flex_40h_calendar
  setUpClass()
  test_allocation_with_max_carryover_and_expiring_allocation()
  test_carried_over_days_expiration_date()
  test_carried_over_days_expiration_date_2()
  test_carried_over_leaves_with_maximum()
  test_expiration_date()
  test_expiration_date_2()
  test_expiring_allocation_without_carried_over_leaves()
  test_no_carried_over_leaves()
  test_no_carried_over_leaves_for_flexible_resource()
  test_no_carried_over_leaves_for_fully_flexible_resource()
}
class "TestGlobalLeaves" as odoo_src.odoo.addons.hr_holidays.tests.test_global_leaves.TestGlobalLeaves {
  setUpClass()
  test_global_leave_keeps_employee_resource_leave()
  test_global_leave_number_of_days_with_new()
  test_global_leave_timezone()
  test_leave_on_calendar_leave()
  test_leave_on_global_leave()
}
class "TestHolidaysCalendar" as odoo_src.odoo.addons.hr_holidays.tests.test_holidays_calendar.TestHolidaysCalendar {
  test_hours_time_off_request_calendar_view()
}
class "TestHolidaysFlow" as odoo_src.odoo.addons.hr_holidays.tests.test_holidays_flow.TestHolidaysFlow {
  holidays_status_hr
  holidays_status_limited
  holidays_status_manager
  test_00_leave_request_flow_unlimited()
  test_01_leave_request_flow_limited()
  test_10_leave_summary_reports()
  test_sql_constraint_dates()
}
class "TestHolidaysMail" as odoo_src.odoo.addons.hr_holidays.tests.test_holidays_mail.TestHolidaysMail {
  test_email_sent_when_approved()
}
class "TestHrHolidaysAccessRightsCommon" as odoo_src.odoo.addons.hr_holidays.tests.test_access_rights.TestHrHolidaysAccessRightsCommon {
  request_leave(user_id, request_date_from, number_of_days, values)
  setUpClass()
}
class "TestHrHolidaysAccessRightsCommon" as odoo_src.odoo.addons.hr_holidays.tests.test_multicompany.TestHrHolidaysAccessRightsCommon {
  setUpClass()
  test_unrelated_public_leave()
}
class "TestHrHolidaysCancelLeave" as odoo_src.odoo.addons.hr_holidays.tests.test_hr_holidays_cancel_leave.TestHrHolidaysCancelLeave {
  setUpClass()
  test_action_cancel_leave()
  test_action_cancel_leave_from_another_person()
  test_action_cancel_leave_in_past()
  test_user_cannot_unarchive_leave()
}
class "TestHrHolidaysCommon" as odoo_src.odoo.addons.hr_holidays.tests.common.TestHrHolidaysCommon {
  setUpClass()
}
class "TestHrHolidaysTour" as odoo_src.odoo.addons.hr_holidays.tests.test_hr_holidays_tour.TestHrHolidaysTour {
  test_hr_holidays_tour()
}
class "TestHrLeaveMandatoryDays" as odoo_src.odoo.addons.hr_holidays.tests.test_mandatory_days.TestHrLeaveMandatoryDays {
  setUpClass()
  test_department_mandatory_days()
  test_get_mandatory_days()
  test_request_mandatory_days()
}
class "TestHrLeaveType" as odoo_src.odoo.addons.hr_holidays.tests.test_hr_leave_type.TestHrLeaveType {
  test_time_type()
  test_type_creation_right()
  test_users_tz_shift_back()
}
class "TestHrLeaveUninstall" as odoo_src.odoo.addons.hr_holidays.tests.test_uninstall.TestHrLeaveUninstall {
  test_unlink_model()
}
class "TestLeaveRequests" as odoo_src.odoo.addons.hr_holidays.tests.test_leave_requests.TestLeaveRequests {
  setUpClass()
  set_employee_create_date(_id, newdate)
  test_accrual_validity_time_valid()
  test_activity_update_with_time_off_officer()
  test_allocation_constrain_dates_check()
  test_allocation_request()
  test_archived_allocation()
  test_cancel_leave()
  test_company_leaves()
  test_create_support_document_in_the_past()
  test_current_leave_status()
  test_default_request_date_timezone()
  test_department_leave()
  test_duration_display_global_leave()
  test_duration_display_public_leave_include()
  test_employee_is_absent()
  test_expired_allocation()
  test_filter_time_off_type_multiple_employees()
  test_holiday_type_allocation()
  test_holiday_type_allocation_requirement_edit()
  test_leave_defaults_with_timezones()
  test_leave_duration_on_public_holiday_with_flexible_request()
  test_leave_with_public_holiday_other_company()
  test_limited_type_days_left()
  test_limited_type_not_enough_days()
  test_no_days_expired()
  test_number_of_hours_display()
  test_number_of_hours_display_flexible_calendar()
  test_number_of_hours_display_global_leave()
  test_overlapping_requests()
  test_prevent_misplacement_of_allocations_without_end_date()
  test_public_holiday_in_the_middle_of_flexible_request()
  test_several_allocations()
  test_several_allocations_split()
  test_time_off_creation_without_allocation()
  test_time_off_date_edit()
  test_time_off_duration_zero()
  test_time_off_irregular_working_schedule()
  test_time_off_recovery_on_create()
  test_time_off_recovery_on_unlink()
  test_time_off_recovery_on_write()
  test_timezone_company_leave_request()
  test_timezone_company_validated()
  test_timezone_employee_leave_request()
  test_undefined_working_hours()
}
class "TestMultiCompany" as odoo_src.odoo.addons.hr_holidays.tests.test_access_rights.TestMultiCompany {
  setUpClass()
  test_leave_access_no_company_manager()
  test_leave_access_no_company_officer()
  test_leave_access_no_company_user()
  test_leave_access_other_company_manager()
  test_leave_access_other_company_officer()
  test_leave_access_other_company_user()
}
class "TestNegative" as odoo_src.odoo.addons.hr_holidays.tests.test_negative.TestNegative {
  setUpClass()
  test_negative_time_off()
}
class "TestOutOfOffice" as odoo_src.odoo.addons.hr_holidays.tests.test_out_of_office.TestOutOfOffice {
  setUpClass()
  test_leave_ooo()
}
class "TestOutOfOfficePerformance" as odoo_src.odoo.addons.hr_holidays.tests.test_out_of_office.TestOutOfOfficePerformance {
  setUpClass()
  test_leave_im_status_performance_partner_leave_offline()
  test_leave_im_status_performance_partner_offline()
  test_leave_im_status_performance_user_leave_offline()
  test_search_absent_employee()
}
class "TestPartner" as odoo_src.odoo.addons.hr_holidays.tests.test_res_partner.TestPartner {
  setUpClass()
  test_res_partner_to_store()
}
class "TestTimeoffEvent" as odoo_src.odoo.addons.hr_holidays.tests.test_timeoff_event.TestTimeoffEvent {
  holiday
  hr_leave_type
  test_no_videocall_url_in_timeoff_event()
}
class "TestWorkingHours" as odoo_src.odoo.addons.hr_holidays.tests.test_working_hours.TestWorkingHours {
  setUpClass()
  test_multi_companies_2_employees_2_selected_companies_company_holidays()
  test_multi_companies_2_employees_2_selected_companies_global_holidays()
  test_multi_companies_2_employees_2_selected_companies_holidays()
}
class "User" as odoo_src.odoo.addons.hr_holidays.models.res_users.User {
  SELF_READABLE_FIELDS
  allocation_count
  allocation_display
  allocation_remaining_display
  current_leave_state
  hr_icon_display
  is_absent
  leave_date_to
  leave_manager_id
  show_leaves
  create(vals_list)
}
odoo_src.odoo.addons.hr_holidays.tests.test_access_rights.TestAccessRightsCreate --|> odoo_src.odoo.addons.hr_holidays.tests.test_access_rights.TestHrHolidaysAccessRightsCommon
odoo_src.odoo.addons.hr_holidays.tests.test_access_rights.TestAccessRightsRead --|> odoo_src.odoo.addons.hr_holidays.tests.test_access_rights.TestHrHolidaysAccessRightsCommon
odoo_src.odoo.addons.hr_holidays.tests.test_access_rights.TestAccessRightsUnlink --|> odoo_src.odoo.addons.hr_holidays.tests.test_access_rights.TestHrHolidaysAccessRightsCommon
odoo_src.odoo.addons.hr_holidays.tests.test_access_rights.TestAccessRightsWrite --|> odoo_src.odoo.addons.hr_holidays.tests.test_access_rights.TestHrHolidaysAccessRightsCommon
odoo_src.odoo.addons.hr_holidays.tests.test_access_rights.TestAcessRightsStates --|> odoo_src.odoo.addons.hr_holidays.tests.test_access_rights.TestHrHolidaysAccessRightsCommon
odoo_src.odoo.addons.hr_holidays.tests.test_allocation_access_rights.TestAccessRightsEmployeeManager --|> odoo_src.odoo.addons.hr_holidays.tests.test_allocation_access_rights.TestAllocationRights
odoo_src.odoo.addons.hr_holidays.tests.test_allocation_access_rights.TestAccessRightsHolidayManager --|> odoo_src.odoo.addons.hr_holidays.tests.test_allocation_access_rights.TestAllocationRights
odoo_src.odoo.addons.hr_holidays.tests.test_allocation_access_rights.TestAccessRightsHolidayUser --|> odoo_src.odoo.addons.hr_holidays.tests.test_allocation_access_rights.TestAllocationRights
odoo_src.odoo.addons.hr_holidays.tests.test_allocation_access_rights.TestAccessRightsSimpleUser --|> odoo_src.odoo.addons.hr_holidays.tests.test_allocation_access_rights.TestAllocationRights
odoo_src.odoo.addons.hr_holidays.tests.test_hr_holidays_cancel_leave.TestHrHolidaysCancelLeave --|> odoo_src.odoo.addons.hr_holidays.tests.common.TestHrHolidaysCommon
@enduml
